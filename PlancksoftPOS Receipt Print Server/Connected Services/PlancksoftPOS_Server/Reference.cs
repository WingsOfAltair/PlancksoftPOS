//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlancksoftPOS_Receipt_Print_Server.PlancksoftPOS_Server {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlancksoftPOS_Server.IPlancksoftPOS_Server")]
    public interface IPlancksoftPOS_Server {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/CheckConnection", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/CheckConnectionResponse")]
        bool CheckConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/CheckConnection", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/CheckConnectionResponse")]
        System.Threading.Tasks.Task<bool> CheckConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveSystemSettings", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveSystemSettingsResponse")]
        System.Data.DataTable RetrieveSystemSettings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveSystemSettings", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveSystemSettingsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> RetrieveSystemSettingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateSystemSettings", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateSystemSettingsResponse")]
        bool UpdateSystemSettings(string SystemName, byte[] SystemLogo, string SystemPhone, string SystemAddress, int SystemReceiptBlankSpaces, int SystemIncludeLogoInReceipt, decimal SystemTax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateSystemSettings", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateSystemSettingsResponse")]
        System.Threading.Tasks.Task<bool> UpdateSystemSettingsAsync(string SystemName, byte[] SystemLogo, string SystemPhone, string SystemAddress, int SystemReceiptBlankSpaces, int SystemIncludeLogoInReceipt, decimal SystemTax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillSoldBItemQuantity", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillSoldBItemQuantityResponse")]
        int RetrieveBillSoldBItemQuantity(int BillNumber, string itemBarcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillSoldBItemQuantity", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillSoldBItemQuantityResponse")]
        System.Threading.Tasks.Task<int> RetrieveBillSoldBItemQuantityAsync(int BillNumber, string itemBarcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemTypeName", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemTypeNameResponse")]
        string RetrieveItemTypeName(int ItemTypeIndex, int locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemTypeName", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemTypeNameResponse")]
        System.Threading.Tasks.Task<string> RetrieveItemTypeNameAsync(int ItemTypeIndex, int locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveWarehouseName", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveWarehouseNameResponse")]
        string RetrieveWarehouseName(int WarehouseIndex, int locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveWarehouseName", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveWarehouseNameResponse")]
        System.Threading.Tasks.Task<string> RetrieveWarehouseNameAsync(int WarehouseIndex, int locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteCategoryName", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteCategoryNameResponse")]
        string RetrieveFavoriteCategoryName(int CategoryIndex, int locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteCategoryName", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteCategoryNameResponse")]
        System.Threading.Tasks.Task<string> RetrieveFavoriteCategoryNameAsync(int CategoryIndex, int locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveCashierNames", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveCashierNamesResponse")]
        System.Collections.Generic.List<string> RetrieveCashierNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveCashierNames", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveCashierNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> RetrieveCashierNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemTypeID", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemTypeIDResponse")]
        int RetrieveItemTypeID(string ItemTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemTypeID", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemTypeIDResponse")]
        System.Threading.Tasks.Task<int> RetrieveItemTypeIDAsync(string ItemTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveWarehouseID", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveWarehouseIDResponse")]
        int RetrieveWarehouseID(string WarehouseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveWarehouseID", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveWarehouseIDResponse")]
        System.Threading.Tasks.Task<int> RetrieveWarehouseIDAsync(string WarehouseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteCategoryID", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteCategoryIDResponse")]
        int RetrieveFavoriteCategoryID(string CategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteCategoryID", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteCategoryIDResponse")]
        System.Threading.Tasks.Task<int> RetrieveFavoriteCategoryIDAsync(string CategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrievePrinterItemTypes", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrievePrinterItemTypesResponse")]
        System.Collections.Generic.List<Dependencies.ItemType> RetrievePrinterItemTypes(int printerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrievePrinterItemTypes", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrievePrinterItemTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.ItemType>> RetrievePrinterItemTypesAsync(int printerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemTypes", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemTypesResponse")]
        System.Collections.Generic.List<Dependencies.ItemType> RetrieveItemTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemTypes", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.ItemType>> RetrieveItemTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveWarehouses", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveWarehousesResponse")]
        System.Collections.Generic.List<Dependencies.Warehouse> RetrieveWarehouses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveWarehouses", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveWarehousesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.Warehouse>> RetrieveWarehousesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteCategories", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteCategoriesResponse")]
        System.Collections.Generic.List<Dependencies.Category> RetrieveFavoriteCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteCategories", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.Category>> RetrieveFavoriteCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrievePrinters", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrievePrintersResponse")]
        System.Collections.Generic.List<Dependencies.Printer> RetrievePrinters(string machineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrievePrinters", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrievePrintersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.Printer>> RetrievePrintersAsync(string machineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLoginLogoutInfo", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLoginLogoutInfoResponse")]
        System.Data.DataTable RetrieveLoginLogoutInfo(System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLoginLogoutInfo", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLoginLogoutInfoResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> RetrieveLoginLogoutInfoAsync(System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUsersList", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUsersListResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Account>, System.Data.DataTable> RetrieveUsersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUsersList", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUsersListResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Account>, System.Data.DataTable>> RetrieveUsersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetRetrieveClients", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetRetrieveClientsResponse")]
        System.Data.DataTable GetRetrieveClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetRetrieveClients", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetRetrieveClientsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRetrieveClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetRetrieveVendors", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetRetrieveVendorsResponse")]
        System.Data.DataTable GetRetrieveVendors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetRetrieveVendors", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetRetrieveVendorsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRetrieveVendorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/CheckAdmin", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/CheckAdminResponse")]
        bool CheckAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/CheckAdmin", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/CheckAdminResponse")]
        System.Threading.Tasks.Task<bool> CheckAdminAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RegisterAdmin", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RegisterAdminResponse")]
        bool RegisterAdmin(Dependencies.Account AccountToRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RegisterAdmin", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RegisterAdminResponse")]
        System.Threading.Tasks.Task<bool> RegisterAdminAsync(Dependencies.Account AccountToRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/LogLogout", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/LogLogoutResponse")]
        void LogLogout(string cashierName, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/LogLogout", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/LogLogoutResponse")]
        System.Threading.Tasks.Task LogLogoutAsync(string cashierName, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/LogLogin", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/LogLoginResponse")]
        void LogLogin(string cashierName, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/LogLogin", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/LogLoginResponse")]
        System.Threading.Tasks.Task LogLoginAsync(string cashierName, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/Login", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/LoginResponse")]
        System.Tuple<bool, string, bool, bool> Login(Dependencies.Account AccountToLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/Login", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/LoginResponse")]
        System.Threading.Tasks.Task<System.Tuple<bool, string, bool, bool>> LoginAsync(Dependencies.Account AccountToLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/Register", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RegisterResponse")]
        bool Register(Dependencies.Account AccountToRegister, string UID, int AdminOrNot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/Register", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(Dependencies.Account AccountToRegister, string UID, int AdminOrNot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/AddPrinterItemType", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/AddPrinterItemTypeResponse")]
        bool AddPrinterItemType(int printerID, int itemTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/AddPrinterItemType", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/AddPrinterItemTypeResponse")]
        System.Threading.Tasks.Task<bool> AddPrinterItemTypeAsync(int printerID, int itemTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeletePrinterItemType", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeletePrinterItemTypeResponse")]
        bool DeletePrinterItemType(int printerID, int itemTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeletePrinterItemType", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeletePrinterItemTypeResponse")]
        System.Threading.Tasks.Task<bool> DeletePrinterItemTypeAsync(int printerID, int itemTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeletePrinter", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeletePrinterResponse")]
        bool DeletePrinter(string machineName, int printerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeletePrinter", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeletePrinterResponse")]
        System.Threading.Tasks.Task<bool> DeletePrinterAsync(string machineName, int printerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteFavoriteItem", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteFavoriteItemResponse")]
        bool DeleteFavoriteItem(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteFavoriteItem", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteFavoriteItemResponse")]
        System.Threading.Tasks.Task<bool> DeleteFavoriteItemAsync(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/AddFavoriteItem", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/AddFavoriteItemResponse")]
        bool AddFavoriteItem(string ItemName, string ItemBarCode, int ItemQuantity, decimal ItemPrice, decimal ItemPriceTax, decimal Category, System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/AddFavoriteItem", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/AddFavoriteItemResponse")]
        System.Threading.Tasks.Task<bool> AddFavoriteItemAsync(string ItemName, string ItemBarCode, int ItemQuantity, decimal ItemPrice, decimal ItemPriceTax, decimal Category, System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SaveRegisterClose", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SaveRegisterCloseResponse")]
        bool SaveRegisterClose(string cashierName, decimal moneyInRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SaveRegisterClose", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SaveRegisterCloseResponse")]
        System.Threading.Tasks.Task<bool> SaveRegisterCloseAsync(string cashierName, decimal moneyInRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SaveRegisterOpen", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SaveRegisterOpenResponse")]
        bool SaveRegisterOpen(string cashierName, decimal moneyInRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SaveRegisterOpen", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SaveRegisterOpenResponse")]
        System.Threading.Tasks.Task<bool> SaveRegisterOpenAsync(string cashierName, decimal moneyInRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchWarehouseInventoryItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchWarehouseInventoryItemsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> SearchWarehouseInventoryItems(int WarehouseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchWarehouseInventoryItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchWarehouseInventoryItemsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> SearchWarehouseInventoryItemsAsync(int WarehouseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchInventoryItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchInventoryItemsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> SearchInventoryItems(string ItemName, string ItemBarCode, int locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchInventoryItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchInventoryItemsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> SearchInventoryItemsAsync(string ItemName, string ItemBarCode, int locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchInventoryItemsWithBarCode", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchInventoryItemsWithBarCodeResponse")]
        Dependencies.Item SearchInventoryItemsWithBarCode(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchInventoryItemsWithBarCode", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchInventoryItemsWithBarCodeResponse")]
        System.Threading.Tasks.Task<Dependencies.Item> SearchInventoryItemsWithBarCodeAsync(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUnPortedBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUnPortedBillsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrieveUnPortedBills(string Date1, string Date2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUnPortedBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUnPortedBillsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrieveUnPortedBillsAsync(string Date1, string Date2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrievePortedBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrievePortedBillsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrievePortedBills(string Date1, string Date2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrievePortedBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrievePortedBillsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrievePortedBillsAsync(string Date1, string Date2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUnpaidBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUnpaidBillsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrieveUnpaidBills();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUnpaidBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUnpaidBillsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrieveUnpaidBillsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveVendorBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveVendorBillsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrieveVendorBills(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveVendorBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveVendorBillsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrieveVendorBillsAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveTaxZReport", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveTaxZReportResponse")]
        System.Data.DataTable RetrieveTaxZReport(string StartDate, string EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveTaxZReport", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveTaxZReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> RetrieveTaxZReportAsync(string StartDate, string EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrieveBills();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrieveBillsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUnprintedBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUnprintedBillsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrieveUnprintedBills(string MachineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUnprintedBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUnprintedBillsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrieveUnprintedBillsAsync(string MachineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillsRefund", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillsRefundResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrieveBillsRefund(string customerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillsRefund", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillsRefundResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrieveBillsRefundAsync(string customerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveCapitalRevenue", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveCapitalRevenueResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveCapitalRevenue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveCapitalRevenue", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveCapitalRevenueResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveCapitalRevenueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveExports", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveExportsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveExports();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveExports", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveExportsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveExportsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveImports", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveImportsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveImports();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveImports", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveImportsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveImportsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLeastBoughtItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLeastBoughtItemsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveLeastBoughtItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLeastBoughtItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLeastBoughtItemsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveLeastBoughtItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveMostBoughtItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveMostBoughtItemsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveMostBoughtItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveMostBoughtItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveMostBoughtItemsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveMostBoughtItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveAccountAuthority", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveAccountAuthorityResponse")]
        int RetrieveAccountAuthority(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveAccountAuthority", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveAccountAuthorityResponse")]
        System.Threading.Tasks.Task<int> RetrieveAccountAuthorityAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUserPermissions", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUserPermissionsResponse")]
        Dependencies.Account RetrieveUserPermissions(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUserPermissions", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUserPermissionsResponse")]
        System.Threading.Tasks.Task<Dependencies.Account> RetrieveUserPermissionsAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemPictureFromBarCode", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemPictureFromBarCodeResponse")]
        Dependencies.Item RetrieveItemPictureFromBarCode(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemPictureFromBarCode", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemPictureFromBarCodeResponse")]
        System.Threading.Tasks.Task<Dependencies.Item> RetrieveItemPictureFromBarCodeAsync(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemsQuantityDates", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemsQuantityDatesResponse")]
        Dependencies.Item RetrieveItemsQuantityDates(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemsQuantityDates", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemsQuantityDatesResponse")]
        System.Threading.Tasks.Task<Dependencies.Item> RetrieveItemsQuantityDatesAsync(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveItems(int locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveItemsAsync(int locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveEmployees", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveEmployeesResponse")]
        System.Data.DataTable RetrieveEmployees(System.DateTime DateFrom, System.DateTime DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveEmployees", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveEmployeesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> RetrieveEmployeesAsync(System.DateTime DateFrom, System.DateTime DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUsers", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUsersResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Account>, System.Data.DataTable> RetrieveUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUsers", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveUsersResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Account>, System.Data.DataTable>> RetrieveUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveClientBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveClientBillsResponse")]
        System.Data.DataTable RetrieveClientBills(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveClientBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveClientBillsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> RetrieveClientBillsAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveVendorBillItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveVendorBillItemsResponse")]
        System.Data.DataTable RetrieveVendorBillItems(int BillNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveVendorBillItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveVendorBillItemsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> RetrieveVendorBillItemsAsync(int BillNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillItemsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveBillItems(int BillNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillItemsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveBillItemsAsync(int BillNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillItemsRefund", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillItemsRefundResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveBillItemsRefund(int BillNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillItemsRefund", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillItemsRefundResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveBillItemsRefundAsync(int BillNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillItemsProfit", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillItemsProfitResponse")]
        System.Data.DataTable RetrieveBillItemsProfit(string Date1, string Date2, int ItemTypeID, string CashierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillItemsProfit", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveBillItemsProfitResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> RetrieveBillItemsProfitAsync(string Date1, string Date2, int ItemTypeID, string CashierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveReturnedItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveReturnedItemsResponse")]
        System.Data.DataTable RetrieveReturnedItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveReturnedItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveReturnedItemsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> RetrieveReturnedItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteItemsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveFavoriteItems(int Category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveFavoriteItemsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveFavoriteItemsAsync(int Category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetCapitalAmount", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetCapitalAmountResponse")]
        decimal GetCapitalAmount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetCapitalAmount", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetCapitalAmountResponse")]
        System.Threading.Tasks.Task<decimal> GetCapitalAmountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetOpenRegisterAmount", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetOpenRegisterAmountResponse")]
        decimal GetOpenRegisterAmount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetOpenRegisterAmount", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetOpenRegisterAmountResponse")]
        System.Threading.Tasks.Task<decimal> GetOpenRegisterAmountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetTotalSalesAmountCloseCash", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetTotalSalesAmountCloseCashResponse")]
        decimal GetTotalSalesAmountCloseCash();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetTotalSalesAmountCloseCash", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetTotalSalesAmountCloseCashResponse")]
        System.Threading.Tasks.Task<decimal> GetTotalSalesAmountCloseCashAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetTotalSalesAmount", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetTotalSalesAmountResponse")]
        decimal GetTotalSalesAmount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetTotalSalesAmount", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetTotalSalesAmountResponse")]
        System.Threading.Tasks.Task<decimal> GetTotalSalesAmountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetLastOpenRegisterDate", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetLastOpenRegisterDateResponse")]
        string GetLastOpenRegisterDate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetLastOpenRegisterDate", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetLastOpenRegisterDateResponse")]
        System.Threading.Tasks.Task<string> GetLastOpenRegisterDateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertExpense", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertExpenseResponse")]
        bool InsertExpense(string ExpenseName, decimal ExpenseCost, string EmployeeName, System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertExpense", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertExpenseResponse")]
        System.Threading.Tasks.Task<bool> InsertExpenseAsync(string ExpenseName, decimal ExpenseCost, string EmployeeName, System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertDeduction", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertDeductionResponse")]
        bool InsertDeduction(int EmployeeID, System.DateTime Date, decimal Deduction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertDeduction", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertDeductionResponse")]
        System.Threading.Tasks.Task<bool> InsertDeductionAsync(int EmployeeID, System.DateTime Date, decimal Deduction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertDayOff", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertDayOffResponse")]
        bool InsertDayOff(int EmployeeID, System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertDayOff", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertDayOffResponse")]
        System.Threading.Tasks.Task<bool> InsertDayOffAsync(int EmployeeID, System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertAbsence", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertAbsenceResponse")]
        bool InsertAbsence(int EmployeeID, System.DateTime Date, int Hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertAbsence", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertAbsenceResponse")]
        System.Threading.Tasks.Task<bool> InsertAbsenceAsync(int EmployeeID, System.DateTime Date, int Hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertEmployee", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertEmployeeResponse")]
        bool InsertEmployee(string EmployeeName, decimal Salary, string Phone, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertEmployee", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertEmployeeResponse")]
        System.Threading.Tasks.Task<bool> InsertEmployeeAsync(string EmployeeName, decimal Salary, string Phone, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertItem", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertItemResponse")]
        bool InsertItem(Dependencies.Item ItemToInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertItem", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertItemResponse")]
        System.Threading.Tasks.Task<bool> InsertItemAsync(Dependencies.Item ItemToInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteItemType", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteItemTypeResponse")]
        bool DeleteItemType(int ItemTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteItemType", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteItemTypeResponse")]
        System.Threading.Tasks.Task<bool> DeleteItemTypeAsync(int ItemTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteWarehouse", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteWarehouseResponse")]
        bool DeleteWarehouse(int WarehouseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteWarehouse", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteWarehouseResponse")]
        System.Threading.Tasks.Task<bool> DeleteWarehouseAsync(int WarehouseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteFavoriteCategory", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteFavoriteCategoryResponse")]
        bool DeleteFavoriteCategory(int FavoriteCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteFavoriteCategory", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteFavoriteCategoryResponse")]
        System.Threading.Tasks.Task<bool> DeleteFavoriteCategoryAsync(int FavoriteCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemTypes", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemTypesResponse")]
        bool UpdateItemTypes(int ItemTypeID, string ItemTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemTypes", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemTypesResponse")]
        System.Threading.Tasks.Task<bool> UpdateItemTypesAsync(int ItemTypeID, string ItemTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateWarehouses", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateWarehousesResponse")]
        bool UpdateWarehouses(int WarehouseID, string WarehouseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateWarehouses", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateWarehousesResponse")]
        System.Threading.Tasks.Task<bool> UpdateWarehousesAsync(int WarehouseID, string WarehouseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateFavoriteCategories", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateFavoriteCategoriesResponse")]
        bool UpdateFavoriteCategories(int FavoriteCategoryID, string FavoriteCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateFavoriteCategories", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateFavoriteCategoriesResponse")]
        System.Threading.Tasks.Task<bool> UpdateFavoriteCategoriesAsync(int FavoriteCategoryID, string FavoriteCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdatePrinters", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdatePrintersResponse")]
        bool UpdatePrinters(int printerID, string printerName, string machineName, int isMainPrinter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdatePrinters", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdatePrintersResponse")]
        System.Threading.Tasks.Task<bool> UpdatePrintersAsync(int printerID, string printerName, string machineName, int isMainPrinter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertItemType", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertItemTypeResponse")]
        bool InsertItemType(string ItemTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertItemType", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertItemTypeResponse")]
        System.Threading.Tasks.Task<bool> InsertItemTypeAsync(string ItemTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertWarehouse", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertWarehouseResponse")]
        bool InsertWarehouse(string WarehouseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertWarehouse", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertWarehouseResponse")]
        System.Threading.Tasks.Task<bool> InsertWarehouseAsync(string WarehouseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertFavoriteCategory", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertFavoriteCategoryResponse")]
        bool InsertFavoriteCategory(string FavoriteCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertFavoriteCategory", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertFavoriteCategoryResponse")]
        System.Threading.Tasks.Task<bool> InsertFavoriteCategoryAsync(string FavoriteCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertPrinter", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertPrinterResponse")]
        bool InsertPrinter(string machineName, string printerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/InsertPrinter", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/InsertPrinterResponse")]
        System.Threading.Tasks.Task<bool> InsertPrinterAsync(string machineName, string printerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteClient", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteClientResponse")]
        bool DeleteClient(string ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteClient", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteClientResponse")]
        System.Threading.Tasks.Task<bool> DeleteClientAsync(string ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RegisterClient", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RegisterClientResponse")]
        bool RegisterClient(Dependencies.Client ClientToInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RegisterClient", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RegisterClientResponse")]
        System.Threading.Tasks.Task<bool> RegisterClientAsync(Dependencies.Client ClientToInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RegisterVendor", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RegisterVendorResponse")]
        bool RegisterVendor(Dependencies.Client ClientToInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RegisterVendor", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RegisterVendorResponse")]
        System.Threading.Tasks.Task<bool> RegisterVendorAsync(Dependencies.Client ClientToInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteAbsence", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteAbsenceResponse")]
        bool DeleteAbsence(int AbsenceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteAbsence", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteAbsenceResponse")]
        System.Threading.Tasks.Task<bool> DeleteAbsenceAsync(int AbsenceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteEmployee", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteEmployeeResponse")]
        bool DeleteEmployee(int EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteEmployee", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(int EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteUser", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteUserResponse")]
        bool DeleteUser(Dependencies.Account UserToUpdate, string cashierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteUser", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(Dependencies.Account UserToUpdate, string cashierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/AddSaleOnItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/AddSaleOnItemsResponse")]
        bool AddSaleOnItems(System.Collections.Generic.List<Dependencies.Item> saleItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/AddSaleOnItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/AddSaleOnItemsResponse")]
        System.Threading.Tasks.Task<bool> AddSaleOnItemsAsync(System.Collections.Generic.List<Dependencies.Item> saleItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/AddItemToClient", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/AddItemToClientResponse")]
        bool AddItemToClient(string ItemBarCode, int ClientID, decimal ClientPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/AddItemToClient", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/AddItemToClientResponse")]
        System.Threading.Tasks.Task<bool> AddItemToClientAsync(string ItemBarCode, int ClientID, decimal ClientPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/AddUnpaidBill", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/AddUnpaidBillResponse")]
        int AddUnpaidBill(Dependencies.Bill billToAdd, string cashierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/AddUnpaidBill", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/AddUnpaidBillResponse")]
        System.Threading.Tasks.Task<int> AddUnpaidBillAsync(Dependencies.Bill billToAdd, string cashierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/AddVendorBill", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/AddVendorBillResponse")]
        int AddVendorBill(Dependencies.Bill billToAdd, string cashierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/AddVendorBill", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/AddVendorBillResponse")]
        System.Threading.Tasks.Task<int> AddVendorBillAsync(Dependencies.Bill billToAdd, string cashierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/PayUnpaidBill", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/PayUnpaidBillResponse")]
        bool PayUnpaidBill(int BillNumber, decimal paidAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/PayUnpaidBill", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/PayUnpaidBillResponse")]
        System.Threading.Tasks.Task<bool> PayUnpaidBillAsync(int BillNumber, decimal paidAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/PayBill", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/PayBillResponse")]
        bool PayBill(Dependencies.Bill billToAdd, string cashierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/PayBill", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/PayBillResponse")]
        System.Threading.Tasks.Task<bool> PayBillAsync(Dependencies.Bill billToAdd, string cashierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateEmployee", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateEmployeeResponse")]
        bool UpdateEmployee(int EmployeeID, string EmployeeName, decimal Salary, string Phone, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateEmployee", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(int EmployeeID, string EmployeeName, decimal Salary, string Phone, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateUser", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateUserResponse")]
        bool UpdateUser(Dependencies.Account UserToUpdate, string cashierName, int AdminOrNot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateUser", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(Dependencies.Account UserToUpdate, string cashierName, int AdminOrNot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateBill", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateBillResponse")]
        bool UpdateBill(int BillNumber, string CashierName, decimal TotalAmount, decimal PaidAmount, decimal RemainderAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateBill", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateBillResponse")]
        System.Threading.Tasks.Task<bool> UpdateBillAsync(int BillNumber, string CashierName, decimal TotalAmount, decimal PaidAmount, decimal RemainderAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/ReturnItem", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/ReturnItemResponse")]
        bool ReturnItem(string ItemName, string ItemBarCode, int ItemQuantity, string cashierName, int BillID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/ReturnItem", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/ReturnItemResponse")]
        System.Threading.Tasks.Task<bool> ReturnItemAsync(string ItemName, string ItemBarCode, int ItemQuantity, string cashierName, int BillID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemWarehouse", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemWarehouseResponse")]
        bool UpdateItemWarehouse(System.Collections.Generic.List<Dependencies.Item> ItemsToUpdate, string EmployeeName, int EntryExitType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemWarehouse", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemWarehouseResponse")]
        System.Threading.Tasks.Task<bool> UpdateItemWarehouseAsync(System.Collections.Generic.List<Dependencies.Item> ItemsToUpdate, string EmployeeName, int EntryExitType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateItem", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemResponse")]
        bool UpdateItem(Dependencies.Item ItemToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateItem", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemResponse")]
        System.Threading.Tasks.Task<bool> UpdateItemAsync(Dependencies.Item ItemToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemQuantity", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemQuantityResponse")]
        bool UpdateItemQuantity(Dependencies.Item ItemToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemQuantity", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/UpdateItemQuantityResponse")]
        System.Threading.Tasks.Task<bool> UpdateItemQuantityAsync(Dependencies.Item ItemToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteItem", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteItemResponse")]
        bool DeleteItem(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/DeleteItem", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/DeleteItemResponse")]
        System.Threading.Tasks.Task<bool> DeleteItemAsync(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLastVendorBillNumberToday", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLastVendorBillNumberTodayRespons" +
            "e")]
        Dependencies.Bill RetrieveLastVendorBillNumberToday(System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLastVendorBillNumberToday", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLastVendorBillNumberTodayRespons" +
            "e")]
        System.Threading.Tasks.Task<Dependencies.Bill> RetrieveLastVendorBillNumberTodayAsync(System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLastBillNumberToday", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLastBillNumberTodayResponse")]
        Dependencies.Bill RetrieveLastBillNumberToday();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLastBillNumberToday", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveLastBillNumberTodayResponse")]
        System.Threading.Tasks.Task<Dependencies.Bill> RetrieveLastBillNumberTodayAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemsQuantity", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemsQuantityResponse")]
        System.Collections.Generic.List<Dependencies.Item> RetrieveItemsQuantity(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemsQuantity", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveItemsQuantityResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.Item>> RetrieveItemsQuantityAsync(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveSaleItemsQuantity", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveSaleItemsQuantityResponse")]
        System.Collections.Generic.List<Dependencies.Item> RetrieveSaleItemsQuantity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveSaleItemsQuantity", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveSaleItemsQuantityResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.Item>> RetrieveSaleItemsQuantityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveExpireStockToday", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveExpireStockTodayResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveExpireStockToday(System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveExpireStockToday", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveExpireStockTodayResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveExpireStockTodayAsync(System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveSaleToday", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveSaleTodayResponse")]
        System.Collections.Generic.List<Dependencies.Item> RetrieveSaleToday(System.DateTime Date, int QuantityEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveSaleToday", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveSaleTodayResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.Item>> RetrieveSaleTodayAsync(System.DateTime Date, int QuantityEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchTodayBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchTodayBillsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> SearchTodayBills(System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchTodayBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchTodayBillsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> SearchTodayBillsAsync(System.DateTime Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchBillsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> SearchBills(string dateFrom, string dateTo, int BillNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchBills", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchBillsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> SearchBillsAsync(string dateFrom, string dateTo, int BillNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetItemQuantity", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetItemQuantityResponse")]
        int GetItemQuantity(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/GetItemQuantity", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/GetItemQuantityResponse")]
        System.Threading.Tasks.Task<int> GetItemQuantityAsync(string ItemBarCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveAbsence", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveAbsenceResponse")]
        System.Data.DataTable RetrieveAbsence(System.DateTime Date1, System.DateTime Date2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/RetrieveAbsence", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/RetrieveAbsenceResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> RetrieveAbsenceAsync(System.DateTime Date1, System.DateTime Date2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchExpenses", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchExpensesResponse")]
        System.Data.DataTable SearchExpenses(string Date1, string Date2, string ExpenseName, string EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchExpenses", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchExpensesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SearchExpensesAsync(string Date1, string Date2, string ExpenseName, string EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchItemsResponse")]
        System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> SearchItems(string ItemName, string ItemBarCode, int ItemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchItems", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchItemsResponse")]
        System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> SearchItemsAsync(string ItemName, string ItemBarCode, int ItemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchClients", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchClientsResponse")]
        System.Data.DataTable SearchClients(string ClientName, string ClientID, string itemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchClients", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchClientsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SearchClientsAsync(string ClientName, string ClientID, string itemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchClientsInfo", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchClientsInfoResponse")]
        System.Data.DataTable SearchClientsInfo(string ClientName, string ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlancksoftPOS_Server/SearchClientsInfo", ReplyAction="http://tempuri.org/IPlancksoftPOS_Server/SearchClientsInfoResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SearchClientsInfoAsync(string ClientName, string ClientID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlancksoftPOS_ServerChannel : PlancksoftPOS_Receipt_Print_Server.PlancksoftPOS_Server.IPlancksoftPOS_Server, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlancksoftPOS_ServerClient : System.ServiceModel.ClientBase<PlancksoftPOS_Receipt_Print_Server.PlancksoftPOS_Server.IPlancksoftPOS_Server>, PlancksoftPOS_Receipt_Print_Server.PlancksoftPOS_Server.IPlancksoftPOS_Server {
        
        public PlancksoftPOS_ServerClient() {
        }
        
        public PlancksoftPOS_ServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlancksoftPOS_ServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlancksoftPOS_ServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlancksoftPOS_ServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckConnection() {
            return base.Channel.CheckConnection();
        }
        
        public System.Threading.Tasks.Task<bool> CheckConnectionAsync() {
            return base.Channel.CheckConnectionAsync();
        }
        
        public System.Data.DataTable RetrieveSystemSettings() {
            return base.Channel.RetrieveSystemSettings();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RetrieveSystemSettingsAsync() {
            return base.Channel.RetrieveSystemSettingsAsync();
        }
        
        public bool UpdateSystemSettings(string SystemName, byte[] SystemLogo, string SystemPhone, string SystemAddress, int SystemReceiptBlankSpaces, int SystemIncludeLogoInReceipt, decimal SystemTax) {
            return base.Channel.UpdateSystemSettings(SystemName, SystemLogo, SystemPhone, SystemAddress, SystemReceiptBlankSpaces, SystemIncludeLogoInReceipt, SystemTax);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSystemSettingsAsync(string SystemName, byte[] SystemLogo, string SystemPhone, string SystemAddress, int SystemReceiptBlankSpaces, int SystemIncludeLogoInReceipt, decimal SystemTax) {
            return base.Channel.UpdateSystemSettingsAsync(SystemName, SystemLogo, SystemPhone, SystemAddress, SystemReceiptBlankSpaces, SystemIncludeLogoInReceipt, SystemTax);
        }
        
        public int RetrieveBillSoldBItemQuantity(int BillNumber, string itemBarcode) {
            return base.Channel.RetrieveBillSoldBItemQuantity(BillNumber, itemBarcode);
        }
        
        public System.Threading.Tasks.Task<int> RetrieveBillSoldBItemQuantityAsync(int BillNumber, string itemBarcode) {
            return base.Channel.RetrieveBillSoldBItemQuantityAsync(BillNumber, itemBarcode);
        }
        
        public string RetrieveItemTypeName(int ItemTypeIndex, int locale) {
            return base.Channel.RetrieveItemTypeName(ItemTypeIndex, locale);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveItemTypeNameAsync(int ItemTypeIndex, int locale) {
            return base.Channel.RetrieveItemTypeNameAsync(ItemTypeIndex, locale);
        }
        
        public string RetrieveWarehouseName(int WarehouseIndex, int locale) {
            return base.Channel.RetrieveWarehouseName(WarehouseIndex, locale);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveWarehouseNameAsync(int WarehouseIndex, int locale) {
            return base.Channel.RetrieveWarehouseNameAsync(WarehouseIndex, locale);
        }
        
        public string RetrieveFavoriteCategoryName(int CategoryIndex, int locale) {
            return base.Channel.RetrieveFavoriteCategoryName(CategoryIndex, locale);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveFavoriteCategoryNameAsync(int CategoryIndex, int locale) {
            return base.Channel.RetrieveFavoriteCategoryNameAsync(CategoryIndex, locale);
        }
        
        public System.Collections.Generic.List<string> RetrieveCashierNames() {
            return base.Channel.RetrieveCashierNames();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> RetrieveCashierNamesAsync() {
            return base.Channel.RetrieveCashierNamesAsync();
        }
        
        public int RetrieveItemTypeID(string ItemTypeName) {
            return base.Channel.RetrieveItemTypeID(ItemTypeName);
        }
        
        public System.Threading.Tasks.Task<int> RetrieveItemTypeIDAsync(string ItemTypeName) {
            return base.Channel.RetrieveItemTypeIDAsync(ItemTypeName);
        }
        
        public int RetrieveWarehouseID(string WarehouseName) {
            return base.Channel.RetrieveWarehouseID(WarehouseName);
        }
        
        public System.Threading.Tasks.Task<int> RetrieveWarehouseIDAsync(string WarehouseName) {
            return base.Channel.RetrieveWarehouseIDAsync(WarehouseName);
        }
        
        public int RetrieveFavoriteCategoryID(string CategoryName) {
            return base.Channel.RetrieveFavoriteCategoryID(CategoryName);
        }
        
        public System.Threading.Tasks.Task<int> RetrieveFavoriteCategoryIDAsync(string CategoryName) {
            return base.Channel.RetrieveFavoriteCategoryIDAsync(CategoryName);
        }
        
        public System.Collections.Generic.List<Dependencies.ItemType> RetrievePrinterItemTypes(int printerID) {
            return base.Channel.RetrievePrinterItemTypes(printerID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.ItemType>> RetrievePrinterItemTypesAsync(int printerID) {
            return base.Channel.RetrievePrinterItemTypesAsync(printerID);
        }
        
        public System.Collections.Generic.List<Dependencies.ItemType> RetrieveItemTypes() {
            return base.Channel.RetrieveItemTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.ItemType>> RetrieveItemTypesAsync() {
            return base.Channel.RetrieveItemTypesAsync();
        }
        
        public System.Collections.Generic.List<Dependencies.Warehouse> RetrieveWarehouses() {
            return base.Channel.RetrieveWarehouses();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.Warehouse>> RetrieveWarehousesAsync() {
            return base.Channel.RetrieveWarehousesAsync();
        }
        
        public System.Collections.Generic.List<Dependencies.Category> RetrieveFavoriteCategories() {
            return base.Channel.RetrieveFavoriteCategories();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.Category>> RetrieveFavoriteCategoriesAsync() {
            return base.Channel.RetrieveFavoriteCategoriesAsync();
        }
        
        public System.Collections.Generic.List<Dependencies.Printer> RetrievePrinters(string machineName) {
            return base.Channel.RetrievePrinters(machineName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.Printer>> RetrievePrintersAsync(string machineName) {
            return base.Channel.RetrievePrintersAsync(machineName);
        }
        
        public System.Data.DataTable RetrieveLoginLogoutInfo(System.DateTime Date) {
            return base.Channel.RetrieveLoginLogoutInfo(Date);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RetrieveLoginLogoutInfoAsync(System.DateTime Date) {
            return base.Channel.RetrieveLoginLogoutInfoAsync(Date);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Account>, System.Data.DataTable> RetrieveUsersList() {
            return base.Channel.RetrieveUsersList();
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Account>, System.Data.DataTable>> RetrieveUsersListAsync() {
            return base.Channel.RetrieveUsersListAsync();
        }
        
        public System.Data.DataTable GetRetrieveClients() {
            return base.Channel.GetRetrieveClients();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRetrieveClientsAsync() {
            return base.Channel.GetRetrieveClientsAsync();
        }
        
        public System.Data.DataTable GetRetrieveVendors() {
            return base.Channel.GetRetrieveVendors();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRetrieveVendorsAsync() {
            return base.Channel.GetRetrieveVendorsAsync();
        }
        
        public bool CheckAdmin() {
            return base.Channel.CheckAdmin();
        }
        
        public System.Threading.Tasks.Task<bool> CheckAdminAsync() {
            return base.Channel.CheckAdminAsync();
        }
        
        public bool RegisterAdmin(Dependencies.Account AccountToRegister) {
            return base.Channel.RegisterAdmin(AccountToRegister);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAdminAsync(Dependencies.Account AccountToRegister) {
            return base.Channel.RegisterAdminAsync(AccountToRegister);
        }
        
        public void LogLogout(string cashierName, System.DateTime date) {
            base.Channel.LogLogout(cashierName, date);
        }
        
        public System.Threading.Tasks.Task LogLogoutAsync(string cashierName, System.DateTime date) {
            return base.Channel.LogLogoutAsync(cashierName, date);
        }
        
        public void LogLogin(string cashierName, System.DateTime date) {
            base.Channel.LogLogin(cashierName, date);
        }
        
        public System.Threading.Tasks.Task LogLoginAsync(string cashierName, System.DateTime date) {
            return base.Channel.LogLoginAsync(cashierName, date);
        }
        
        public System.Tuple<bool, string, bool, bool> Login(Dependencies.Account AccountToLogin) {
            return base.Channel.Login(AccountToLogin);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<bool, string, bool, bool>> LoginAsync(Dependencies.Account AccountToLogin) {
            return base.Channel.LoginAsync(AccountToLogin);
        }
        
        public bool Register(Dependencies.Account AccountToRegister, string UID, int AdminOrNot) {
            return base.Channel.Register(AccountToRegister, UID, AdminOrNot);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(Dependencies.Account AccountToRegister, string UID, int AdminOrNot) {
            return base.Channel.RegisterAsync(AccountToRegister, UID, AdminOrNot);
        }
        
        public bool AddPrinterItemType(int printerID, int itemTypeID) {
            return base.Channel.AddPrinterItemType(printerID, itemTypeID);
        }
        
        public System.Threading.Tasks.Task<bool> AddPrinterItemTypeAsync(int printerID, int itemTypeID) {
            return base.Channel.AddPrinterItemTypeAsync(printerID, itemTypeID);
        }
        
        public bool DeletePrinterItemType(int printerID, int itemTypeID) {
            return base.Channel.DeletePrinterItemType(printerID, itemTypeID);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePrinterItemTypeAsync(int printerID, int itemTypeID) {
            return base.Channel.DeletePrinterItemTypeAsync(printerID, itemTypeID);
        }
        
        public bool DeletePrinter(string machineName, int printerID) {
            return base.Channel.DeletePrinter(machineName, printerID);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePrinterAsync(string machineName, int printerID) {
            return base.Channel.DeletePrinterAsync(machineName, printerID);
        }
        
        public bool DeleteFavoriteItem(string ItemBarCode) {
            return base.Channel.DeleteFavoriteItem(ItemBarCode);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteFavoriteItemAsync(string ItemBarCode) {
            return base.Channel.DeleteFavoriteItemAsync(ItemBarCode);
        }
        
        public bool AddFavoriteItem(string ItemName, string ItemBarCode, int ItemQuantity, decimal ItemPrice, decimal ItemPriceTax, decimal Category, System.DateTime Date) {
            return base.Channel.AddFavoriteItem(ItemName, ItemBarCode, ItemQuantity, ItemPrice, ItemPriceTax, Category, Date);
        }
        
        public System.Threading.Tasks.Task<bool> AddFavoriteItemAsync(string ItemName, string ItemBarCode, int ItemQuantity, decimal ItemPrice, decimal ItemPriceTax, decimal Category, System.DateTime Date) {
            return base.Channel.AddFavoriteItemAsync(ItemName, ItemBarCode, ItemQuantity, ItemPrice, ItemPriceTax, Category, Date);
        }
        
        public bool SaveRegisterClose(string cashierName, decimal moneyInRegister) {
            return base.Channel.SaveRegisterClose(cashierName, moneyInRegister);
        }
        
        public System.Threading.Tasks.Task<bool> SaveRegisterCloseAsync(string cashierName, decimal moneyInRegister) {
            return base.Channel.SaveRegisterCloseAsync(cashierName, moneyInRegister);
        }
        
        public bool SaveRegisterOpen(string cashierName, decimal moneyInRegister) {
            return base.Channel.SaveRegisterOpen(cashierName, moneyInRegister);
        }
        
        public System.Threading.Tasks.Task<bool> SaveRegisterOpenAsync(string cashierName, decimal moneyInRegister) {
            return base.Channel.SaveRegisterOpenAsync(cashierName, moneyInRegister);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> SearchWarehouseInventoryItems(int WarehouseID) {
            return base.Channel.SearchWarehouseInventoryItems(WarehouseID);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> SearchWarehouseInventoryItemsAsync(int WarehouseID) {
            return base.Channel.SearchWarehouseInventoryItemsAsync(WarehouseID);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> SearchInventoryItems(string ItemName, string ItemBarCode, int locale) {
            return base.Channel.SearchInventoryItems(ItemName, ItemBarCode, locale);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> SearchInventoryItemsAsync(string ItemName, string ItemBarCode, int locale) {
            return base.Channel.SearchInventoryItemsAsync(ItemName, ItemBarCode, locale);
        }
        
        public Dependencies.Item SearchInventoryItemsWithBarCode(string ItemBarCode) {
            return base.Channel.SearchInventoryItemsWithBarCode(ItemBarCode);
        }
        
        public System.Threading.Tasks.Task<Dependencies.Item> SearchInventoryItemsWithBarCodeAsync(string ItemBarCode) {
            return base.Channel.SearchInventoryItemsWithBarCodeAsync(ItemBarCode);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrieveUnPortedBills(string Date1, string Date2) {
            return base.Channel.RetrieveUnPortedBills(Date1, Date2);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrieveUnPortedBillsAsync(string Date1, string Date2) {
            return base.Channel.RetrieveUnPortedBillsAsync(Date1, Date2);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrievePortedBills(string Date1, string Date2) {
            return base.Channel.RetrievePortedBills(Date1, Date2);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrievePortedBillsAsync(string Date1, string Date2) {
            return base.Channel.RetrievePortedBillsAsync(Date1, Date2);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrieveUnpaidBills() {
            return base.Channel.RetrieveUnpaidBills();
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrieveUnpaidBillsAsync() {
            return base.Channel.RetrieveUnpaidBillsAsync();
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrieveVendorBills(int ClientID) {
            return base.Channel.RetrieveVendorBills(ClientID);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrieveVendorBillsAsync(int ClientID) {
            return base.Channel.RetrieveVendorBillsAsync(ClientID);
        }
        
        public System.Data.DataTable RetrieveTaxZReport(string StartDate, string EndDate) {
            return base.Channel.RetrieveTaxZReport(StartDate, EndDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RetrieveTaxZReportAsync(string StartDate, string EndDate) {
            return base.Channel.RetrieveTaxZReportAsync(StartDate, EndDate);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrieveBills() {
            return base.Channel.RetrieveBills();
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrieveBillsAsync() {
            return base.Channel.RetrieveBillsAsync();
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrieveUnprintedBills(string MachineName) {
            return base.Channel.RetrieveUnprintedBills(MachineName);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrieveUnprintedBillsAsync(string MachineName) {
            return base.Channel.RetrieveUnprintedBillsAsync(MachineName);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> RetrieveBillsRefund(string customerName) {
            return base.Channel.RetrieveBillsRefund(customerName);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> RetrieveBillsRefundAsync(string customerName) {
            return base.Channel.RetrieveBillsRefundAsync(customerName);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveCapitalRevenue() {
            return base.Channel.RetrieveCapitalRevenue();
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveCapitalRevenueAsync() {
            return base.Channel.RetrieveCapitalRevenueAsync();
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveExports() {
            return base.Channel.RetrieveExports();
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveExportsAsync() {
            return base.Channel.RetrieveExportsAsync();
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveImports() {
            return base.Channel.RetrieveImports();
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveImportsAsync() {
            return base.Channel.RetrieveImportsAsync();
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveLeastBoughtItems() {
            return base.Channel.RetrieveLeastBoughtItems();
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveLeastBoughtItemsAsync() {
            return base.Channel.RetrieveLeastBoughtItemsAsync();
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveMostBoughtItems() {
            return base.Channel.RetrieveMostBoughtItems();
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveMostBoughtItemsAsync() {
            return base.Channel.RetrieveMostBoughtItemsAsync();
        }
        
        public int RetrieveAccountAuthority(string UserID) {
            return base.Channel.RetrieveAccountAuthority(UserID);
        }
        
        public System.Threading.Tasks.Task<int> RetrieveAccountAuthorityAsync(string UserID) {
            return base.Channel.RetrieveAccountAuthorityAsync(UserID);
        }
        
        public Dependencies.Account RetrieveUserPermissions(string UserID) {
            return base.Channel.RetrieveUserPermissions(UserID);
        }
        
        public System.Threading.Tasks.Task<Dependencies.Account> RetrieveUserPermissionsAsync(string UserID) {
            return base.Channel.RetrieveUserPermissionsAsync(UserID);
        }
        
        public Dependencies.Item RetrieveItemPictureFromBarCode(string ItemBarCode) {
            return base.Channel.RetrieveItemPictureFromBarCode(ItemBarCode);
        }
        
        public System.Threading.Tasks.Task<Dependencies.Item> RetrieveItemPictureFromBarCodeAsync(string ItemBarCode) {
            return base.Channel.RetrieveItemPictureFromBarCodeAsync(ItemBarCode);
        }
        
        public Dependencies.Item RetrieveItemsQuantityDates(string ItemBarCode) {
            return base.Channel.RetrieveItemsQuantityDates(ItemBarCode);
        }
        
        public System.Threading.Tasks.Task<Dependencies.Item> RetrieveItemsQuantityDatesAsync(string ItemBarCode) {
            return base.Channel.RetrieveItemsQuantityDatesAsync(ItemBarCode);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveItems(int locale) {
            return base.Channel.RetrieveItems(locale);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveItemsAsync(int locale) {
            return base.Channel.RetrieveItemsAsync(locale);
        }
        
        public System.Data.DataTable RetrieveEmployees(System.DateTime DateFrom, System.DateTime DateTo) {
            return base.Channel.RetrieveEmployees(DateFrom, DateTo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RetrieveEmployeesAsync(System.DateTime DateFrom, System.DateTime DateTo) {
            return base.Channel.RetrieveEmployeesAsync(DateFrom, DateTo);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Account>, System.Data.DataTable> RetrieveUsers() {
            return base.Channel.RetrieveUsers();
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Account>, System.Data.DataTable>> RetrieveUsersAsync() {
            return base.Channel.RetrieveUsersAsync();
        }
        
        public System.Data.DataTable RetrieveClientBills(int ClientID) {
            return base.Channel.RetrieveClientBills(ClientID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RetrieveClientBillsAsync(int ClientID) {
            return base.Channel.RetrieveClientBillsAsync(ClientID);
        }
        
        public System.Data.DataTable RetrieveVendorBillItems(int BillNumber) {
            return base.Channel.RetrieveVendorBillItems(BillNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RetrieveVendorBillItemsAsync(int BillNumber) {
            return base.Channel.RetrieveVendorBillItemsAsync(BillNumber);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveBillItems(int BillNumber) {
            return base.Channel.RetrieveBillItems(BillNumber);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveBillItemsAsync(int BillNumber) {
            return base.Channel.RetrieveBillItemsAsync(BillNumber);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveBillItemsRefund(int BillNumber) {
            return base.Channel.RetrieveBillItemsRefund(BillNumber);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveBillItemsRefundAsync(int BillNumber) {
            return base.Channel.RetrieveBillItemsRefundAsync(BillNumber);
        }
        
        public System.Data.DataTable RetrieveBillItemsProfit(string Date1, string Date2, int ItemTypeID, string CashierName) {
            return base.Channel.RetrieveBillItemsProfit(Date1, Date2, ItemTypeID, CashierName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RetrieveBillItemsProfitAsync(string Date1, string Date2, int ItemTypeID, string CashierName) {
            return base.Channel.RetrieveBillItemsProfitAsync(Date1, Date2, ItemTypeID, CashierName);
        }
        
        public System.Data.DataTable RetrieveReturnedItems() {
            return base.Channel.RetrieveReturnedItems();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RetrieveReturnedItemsAsync() {
            return base.Channel.RetrieveReturnedItemsAsync();
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveFavoriteItems(int Category) {
            return base.Channel.RetrieveFavoriteItems(Category);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveFavoriteItemsAsync(int Category) {
            return base.Channel.RetrieveFavoriteItemsAsync(Category);
        }
        
        public decimal GetCapitalAmount() {
            return base.Channel.GetCapitalAmount();
        }
        
        public System.Threading.Tasks.Task<decimal> GetCapitalAmountAsync() {
            return base.Channel.GetCapitalAmountAsync();
        }
        
        public decimal GetOpenRegisterAmount() {
            return base.Channel.GetOpenRegisterAmount();
        }
        
        public System.Threading.Tasks.Task<decimal> GetOpenRegisterAmountAsync() {
            return base.Channel.GetOpenRegisterAmountAsync();
        }
        
        public decimal GetTotalSalesAmountCloseCash() {
            return base.Channel.GetTotalSalesAmountCloseCash();
        }
        
        public System.Threading.Tasks.Task<decimal> GetTotalSalesAmountCloseCashAsync() {
            return base.Channel.GetTotalSalesAmountCloseCashAsync();
        }
        
        public decimal GetTotalSalesAmount() {
            return base.Channel.GetTotalSalesAmount();
        }
        
        public System.Threading.Tasks.Task<decimal> GetTotalSalesAmountAsync() {
            return base.Channel.GetTotalSalesAmountAsync();
        }
        
        public string GetLastOpenRegisterDate() {
            return base.Channel.GetLastOpenRegisterDate();
        }
        
        public System.Threading.Tasks.Task<string> GetLastOpenRegisterDateAsync() {
            return base.Channel.GetLastOpenRegisterDateAsync();
        }
        
        public bool InsertExpense(string ExpenseName, decimal ExpenseCost, string EmployeeName, System.DateTime Date) {
            return base.Channel.InsertExpense(ExpenseName, ExpenseCost, EmployeeName, Date);
        }
        
        public System.Threading.Tasks.Task<bool> InsertExpenseAsync(string ExpenseName, decimal ExpenseCost, string EmployeeName, System.DateTime Date) {
            return base.Channel.InsertExpenseAsync(ExpenseName, ExpenseCost, EmployeeName, Date);
        }
        
        public bool InsertDeduction(int EmployeeID, System.DateTime Date, decimal Deduction) {
            return base.Channel.InsertDeduction(EmployeeID, Date, Deduction);
        }
        
        public System.Threading.Tasks.Task<bool> InsertDeductionAsync(int EmployeeID, System.DateTime Date, decimal Deduction) {
            return base.Channel.InsertDeductionAsync(EmployeeID, Date, Deduction);
        }
        
        public bool InsertDayOff(int EmployeeID, System.DateTime Date) {
            return base.Channel.InsertDayOff(EmployeeID, Date);
        }
        
        public System.Threading.Tasks.Task<bool> InsertDayOffAsync(int EmployeeID, System.DateTime Date) {
            return base.Channel.InsertDayOffAsync(EmployeeID, Date);
        }
        
        public bool InsertAbsence(int EmployeeID, System.DateTime Date, int Hours) {
            return base.Channel.InsertAbsence(EmployeeID, Date, Hours);
        }
        
        public System.Threading.Tasks.Task<bool> InsertAbsenceAsync(int EmployeeID, System.DateTime Date, int Hours) {
            return base.Channel.InsertAbsenceAsync(EmployeeID, Date, Hours);
        }
        
        public bool InsertEmployee(string EmployeeName, decimal Salary, string Phone, string Address) {
            return base.Channel.InsertEmployee(EmployeeName, Salary, Phone, Address);
        }
        
        public System.Threading.Tasks.Task<bool> InsertEmployeeAsync(string EmployeeName, decimal Salary, string Phone, string Address) {
            return base.Channel.InsertEmployeeAsync(EmployeeName, Salary, Phone, Address);
        }
        
        public bool InsertItem(Dependencies.Item ItemToInsert) {
            return base.Channel.InsertItem(ItemToInsert);
        }
        
        public System.Threading.Tasks.Task<bool> InsertItemAsync(Dependencies.Item ItemToInsert) {
            return base.Channel.InsertItemAsync(ItemToInsert);
        }
        
        public bool DeleteItemType(int ItemTypeID) {
            return base.Channel.DeleteItemType(ItemTypeID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteItemTypeAsync(int ItemTypeID) {
            return base.Channel.DeleteItemTypeAsync(ItemTypeID);
        }
        
        public bool DeleteWarehouse(int WarehouseID) {
            return base.Channel.DeleteWarehouse(WarehouseID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteWarehouseAsync(int WarehouseID) {
            return base.Channel.DeleteWarehouseAsync(WarehouseID);
        }
        
        public bool DeleteFavoriteCategory(int FavoriteCategoryID) {
            return base.Channel.DeleteFavoriteCategory(FavoriteCategoryID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteFavoriteCategoryAsync(int FavoriteCategoryID) {
            return base.Channel.DeleteFavoriteCategoryAsync(FavoriteCategoryID);
        }
        
        public bool UpdateItemTypes(int ItemTypeID, string ItemTypeName) {
            return base.Channel.UpdateItemTypes(ItemTypeID, ItemTypeName);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateItemTypesAsync(int ItemTypeID, string ItemTypeName) {
            return base.Channel.UpdateItemTypesAsync(ItemTypeID, ItemTypeName);
        }
        
        public bool UpdateWarehouses(int WarehouseID, string WarehouseName) {
            return base.Channel.UpdateWarehouses(WarehouseID, WarehouseName);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateWarehousesAsync(int WarehouseID, string WarehouseName) {
            return base.Channel.UpdateWarehousesAsync(WarehouseID, WarehouseName);
        }
        
        public bool UpdateFavoriteCategories(int FavoriteCategoryID, string FavoriteCategory) {
            return base.Channel.UpdateFavoriteCategories(FavoriteCategoryID, FavoriteCategory);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFavoriteCategoriesAsync(int FavoriteCategoryID, string FavoriteCategory) {
            return base.Channel.UpdateFavoriteCategoriesAsync(FavoriteCategoryID, FavoriteCategory);
        }
        
        public bool UpdatePrinters(int printerID, string printerName, string machineName, int isMainPrinter) {
            return base.Channel.UpdatePrinters(printerID, printerName, machineName, isMainPrinter);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePrintersAsync(int printerID, string printerName, string machineName, int isMainPrinter) {
            return base.Channel.UpdatePrintersAsync(printerID, printerName, machineName, isMainPrinter);
        }
        
        public bool InsertItemType(string ItemTypeName) {
            return base.Channel.InsertItemType(ItemTypeName);
        }
        
        public System.Threading.Tasks.Task<bool> InsertItemTypeAsync(string ItemTypeName) {
            return base.Channel.InsertItemTypeAsync(ItemTypeName);
        }
        
        public bool InsertWarehouse(string WarehouseName) {
            return base.Channel.InsertWarehouse(WarehouseName);
        }
        
        public System.Threading.Tasks.Task<bool> InsertWarehouseAsync(string WarehouseName) {
            return base.Channel.InsertWarehouseAsync(WarehouseName);
        }
        
        public bool InsertFavoriteCategory(string FavoriteCategory) {
            return base.Channel.InsertFavoriteCategory(FavoriteCategory);
        }
        
        public System.Threading.Tasks.Task<bool> InsertFavoriteCategoryAsync(string FavoriteCategory) {
            return base.Channel.InsertFavoriteCategoryAsync(FavoriteCategory);
        }
        
        public bool InsertPrinter(string machineName, string printerName) {
            return base.Channel.InsertPrinter(machineName, printerName);
        }
        
        public System.Threading.Tasks.Task<bool> InsertPrinterAsync(string machineName, string printerName) {
            return base.Channel.InsertPrinterAsync(machineName, printerName);
        }
        
        public bool DeleteClient(string ClientID) {
            return base.Channel.DeleteClient(ClientID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteClientAsync(string ClientID) {
            return base.Channel.DeleteClientAsync(ClientID);
        }
        
        public bool RegisterClient(Dependencies.Client ClientToInsert) {
            return base.Channel.RegisterClient(ClientToInsert);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterClientAsync(Dependencies.Client ClientToInsert) {
            return base.Channel.RegisterClientAsync(ClientToInsert);
        }
        
        public bool RegisterVendor(Dependencies.Client ClientToInsert) {
            return base.Channel.RegisterVendor(ClientToInsert);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterVendorAsync(Dependencies.Client ClientToInsert) {
            return base.Channel.RegisterVendorAsync(ClientToInsert);
        }
        
        public bool DeleteAbsence(int AbsenceID) {
            return base.Channel.DeleteAbsence(AbsenceID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAbsenceAsync(int AbsenceID) {
            return base.Channel.DeleteAbsenceAsync(AbsenceID);
        }
        
        public bool DeleteEmployee(int EmployeeID) {
            return base.Channel.DeleteEmployee(EmployeeID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(int EmployeeID) {
            return base.Channel.DeleteEmployeeAsync(EmployeeID);
        }
        
        public bool DeleteUser(Dependencies.Account UserToUpdate, string cashierName) {
            return base.Channel.DeleteUser(UserToUpdate, cashierName);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(Dependencies.Account UserToUpdate, string cashierName) {
            return base.Channel.DeleteUserAsync(UserToUpdate, cashierName);
        }
        
        public bool AddSaleOnItems(System.Collections.Generic.List<Dependencies.Item> saleItems) {
            return base.Channel.AddSaleOnItems(saleItems);
        }
        
        public System.Threading.Tasks.Task<bool> AddSaleOnItemsAsync(System.Collections.Generic.List<Dependencies.Item> saleItems) {
            return base.Channel.AddSaleOnItemsAsync(saleItems);
        }
        
        public bool AddItemToClient(string ItemBarCode, int ClientID, decimal ClientPrice) {
            return base.Channel.AddItemToClient(ItemBarCode, ClientID, ClientPrice);
        }
        
        public System.Threading.Tasks.Task<bool> AddItemToClientAsync(string ItemBarCode, int ClientID, decimal ClientPrice) {
            return base.Channel.AddItemToClientAsync(ItemBarCode, ClientID, ClientPrice);
        }
        
        public int AddUnpaidBill(Dependencies.Bill billToAdd, string cashierName) {
            return base.Channel.AddUnpaidBill(billToAdd, cashierName);
        }
        
        public System.Threading.Tasks.Task<int> AddUnpaidBillAsync(Dependencies.Bill billToAdd, string cashierName) {
            return base.Channel.AddUnpaidBillAsync(billToAdd, cashierName);
        }
        
        public int AddVendorBill(Dependencies.Bill billToAdd, string cashierName) {
            return base.Channel.AddVendorBill(billToAdd, cashierName);
        }
        
        public System.Threading.Tasks.Task<int> AddVendorBillAsync(Dependencies.Bill billToAdd, string cashierName) {
            return base.Channel.AddVendorBillAsync(billToAdd, cashierName);
        }
        
        public bool PayUnpaidBill(int BillNumber, decimal paidAmount) {
            return base.Channel.PayUnpaidBill(BillNumber, paidAmount);
        }
        
        public System.Threading.Tasks.Task<bool> PayUnpaidBillAsync(int BillNumber, decimal paidAmount) {
            return base.Channel.PayUnpaidBillAsync(BillNumber, paidAmount);
        }
        
        public bool PayBill(Dependencies.Bill billToAdd, string cashierName) {
            return base.Channel.PayBill(billToAdd, cashierName);
        }
        
        public System.Threading.Tasks.Task<bool> PayBillAsync(Dependencies.Bill billToAdd, string cashierName) {
            return base.Channel.PayBillAsync(billToAdd, cashierName);
        }
        
        public bool UpdateEmployee(int EmployeeID, string EmployeeName, decimal Salary, string Phone, string Address) {
            return base.Channel.UpdateEmployee(EmployeeID, EmployeeName, Salary, Phone, Address);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(int EmployeeID, string EmployeeName, decimal Salary, string Phone, string Address) {
            return base.Channel.UpdateEmployeeAsync(EmployeeID, EmployeeName, Salary, Phone, Address);
        }
        
        public bool UpdateUser(Dependencies.Account UserToUpdate, string cashierName, int AdminOrNot) {
            return base.Channel.UpdateUser(UserToUpdate, cashierName, AdminOrNot);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(Dependencies.Account UserToUpdate, string cashierName, int AdminOrNot) {
            return base.Channel.UpdateUserAsync(UserToUpdate, cashierName, AdminOrNot);
        }
        
        public bool UpdateBill(int BillNumber, string CashierName, decimal TotalAmount, decimal PaidAmount, decimal RemainderAmount) {
            return base.Channel.UpdateBill(BillNumber, CashierName, TotalAmount, PaidAmount, RemainderAmount);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateBillAsync(int BillNumber, string CashierName, decimal TotalAmount, decimal PaidAmount, decimal RemainderAmount) {
            return base.Channel.UpdateBillAsync(BillNumber, CashierName, TotalAmount, PaidAmount, RemainderAmount);
        }
        
        public bool ReturnItem(string ItemName, string ItemBarCode, int ItemQuantity, string cashierName, int BillID) {
            return base.Channel.ReturnItem(ItemName, ItemBarCode, ItemQuantity, cashierName, BillID);
        }
        
        public System.Threading.Tasks.Task<bool> ReturnItemAsync(string ItemName, string ItemBarCode, int ItemQuantity, string cashierName, int BillID) {
            return base.Channel.ReturnItemAsync(ItemName, ItemBarCode, ItemQuantity, cashierName, BillID);
        }
        
        public bool UpdateItemWarehouse(System.Collections.Generic.List<Dependencies.Item> ItemsToUpdate, string EmployeeName, int EntryExitType) {
            return base.Channel.UpdateItemWarehouse(ItemsToUpdate, EmployeeName, EntryExitType);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateItemWarehouseAsync(System.Collections.Generic.List<Dependencies.Item> ItemsToUpdate, string EmployeeName, int EntryExitType) {
            return base.Channel.UpdateItemWarehouseAsync(ItemsToUpdate, EmployeeName, EntryExitType);
        }
        
        public bool UpdateItem(Dependencies.Item ItemToUpdate) {
            return base.Channel.UpdateItem(ItemToUpdate);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateItemAsync(Dependencies.Item ItemToUpdate) {
            return base.Channel.UpdateItemAsync(ItemToUpdate);
        }
        
        public bool UpdateItemQuantity(Dependencies.Item ItemToUpdate) {
            return base.Channel.UpdateItemQuantity(ItemToUpdate);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateItemQuantityAsync(Dependencies.Item ItemToUpdate) {
            return base.Channel.UpdateItemQuantityAsync(ItemToUpdate);
        }
        
        public bool DeleteItem(string ItemBarCode) {
            return base.Channel.DeleteItem(ItemBarCode);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteItemAsync(string ItemBarCode) {
            return base.Channel.DeleteItemAsync(ItemBarCode);
        }
        
        public Dependencies.Bill RetrieveLastVendorBillNumberToday(System.DateTime Date) {
            return base.Channel.RetrieveLastVendorBillNumberToday(Date);
        }
        
        public System.Threading.Tasks.Task<Dependencies.Bill> RetrieveLastVendorBillNumberTodayAsync(System.DateTime Date) {
            return base.Channel.RetrieveLastVendorBillNumberTodayAsync(Date);
        }
        
        public Dependencies.Bill RetrieveLastBillNumberToday() {
            return base.Channel.RetrieveLastBillNumberToday();
        }
        
        public System.Threading.Tasks.Task<Dependencies.Bill> RetrieveLastBillNumberTodayAsync() {
            return base.Channel.RetrieveLastBillNumberTodayAsync();
        }
        
        public System.Collections.Generic.List<Dependencies.Item> RetrieveItemsQuantity(string ItemBarCode) {
            return base.Channel.RetrieveItemsQuantity(ItemBarCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.Item>> RetrieveItemsQuantityAsync(string ItemBarCode) {
            return base.Channel.RetrieveItemsQuantityAsync(ItemBarCode);
        }
        
        public System.Collections.Generic.List<Dependencies.Item> RetrieveSaleItemsQuantity() {
            return base.Channel.RetrieveSaleItemsQuantity();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.Item>> RetrieveSaleItemsQuantityAsync() {
            return base.Channel.RetrieveSaleItemsQuantityAsync();
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> RetrieveExpireStockToday(System.DateTime Date) {
            return base.Channel.RetrieveExpireStockToday(Date);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> RetrieveExpireStockTodayAsync(System.DateTime Date) {
            return base.Channel.RetrieveExpireStockTodayAsync(Date);
        }
        
        public System.Collections.Generic.List<Dependencies.Item> RetrieveSaleToday(System.DateTime Date, int QuantityEnd) {
            return base.Channel.RetrieveSaleToday(Date, QuantityEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Dependencies.Item>> RetrieveSaleTodayAsync(System.DateTime Date, int QuantityEnd) {
            return base.Channel.RetrieveSaleTodayAsync(Date, QuantityEnd);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> SearchTodayBills(System.DateTime Date) {
            return base.Channel.SearchTodayBills(Date);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> SearchTodayBillsAsync(System.DateTime Date) {
            return base.Channel.SearchTodayBillsAsync(Date);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable> SearchBills(string dateFrom, string dateTo, int BillNumber) {
            return base.Channel.SearchBills(dateFrom, dateTo, BillNumber);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Bill>, System.Data.DataTable>> SearchBillsAsync(string dateFrom, string dateTo, int BillNumber) {
            return base.Channel.SearchBillsAsync(dateFrom, dateTo, BillNumber);
        }
        
        public int GetItemQuantity(string ItemBarCode) {
            return base.Channel.GetItemQuantity(ItemBarCode);
        }
        
        public System.Threading.Tasks.Task<int> GetItemQuantityAsync(string ItemBarCode) {
            return base.Channel.GetItemQuantityAsync(ItemBarCode);
        }
        
        public System.Data.DataTable RetrieveAbsence(System.DateTime Date1, System.DateTime Date2) {
            return base.Channel.RetrieveAbsence(Date1, Date2);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RetrieveAbsenceAsync(System.DateTime Date1, System.DateTime Date2) {
            return base.Channel.RetrieveAbsenceAsync(Date1, Date2);
        }
        
        public System.Data.DataTable SearchExpenses(string Date1, string Date2, string ExpenseName, string EmployeeID) {
            return base.Channel.SearchExpenses(Date1, Date2, ExpenseName, EmployeeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SearchExpensesAsync(string Date1, string Date2, string ExpenseName, string EmployeeID) {
            return base.Channel.SearchExpensesAsync(Date1, Date2, ExpenseName, EmployeeID);
        }
        
        public System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable> SearchItems(string ItemName, string ItemBarCode, int ItemType) {
            return base.Channel.SearchItems(ItemName, ItemBarCode, ItemType);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<System.Collections.Generic.List<Dependencies.Item>, System.Data.DataTable>> SearchItemsAsync(string ItemName, string ItemBarCode, int ItemType) {
            return base.Channel.SearchItemsAsync(ItemName, ItemBarCode, ItemType);
        }
        
        public System.Data.DataTable SearchClients(string ClientName, string ClientID, string itemName) {
            return base.Channel.SearchClients(ClientName, ClientID, itemName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SearchClientsAsync(string ClientName, string ClientID, string itemName) {
            return base.Channel.SearchClientsAsync(ClientName, ClientID, itemName);
        }
        
        public System.Data.DataTable SearchClientsInfo(string ClientName, string ClientID) {
            return base.Channel.SearchClientsInfo(ClientName, ClientID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SearchClientsInfoAsync(string ClientName, string ClientID) {
            return base.Channel.SearchClientsInfoAsync(ClientName, ClientID);
        }
    }
}
